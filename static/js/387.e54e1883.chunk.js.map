{"version":3,"file":"static/js/387.e54e1883.chunk.js","mappings":"qPAEaA,EAASC,EAAAA,GAAAA,GAAH,kEAINC,EAAOD,EAAAA,GAAAA,EAAH,4C,SC2BjB,EA5BgB,WACd,OAAuCE,EAAAA,EAAAA,UAAS,IAAhD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GAC9BN,EAAeM,EAAqBC,QACrC,GACF,GAAE,CAACN,KAGF,8BACGF,EAAe,EACdA,EAAaS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,2BACE,SAAChB,EAAD,UAASe,KACT,SAACb,EAAD,UAAOc,MAFAF,EAKZ,KAED,SAACZ,EAAD,+DAIP,C,mMC3BKe,EAAW,+BACXC,EAAU,mCACVC,EAAS,UAAMF,EAAN,wBACTG,EAAU,UAAMH,EAAN,iBACVI,EAAW,UAAMJ,EAAN,UAEJK,EAAiB,mCAAG,WAAMC,GAAN,gGAENC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,oBACIF,EADJ,iCACoCK,EADpC,gCAFM,cAEvBE,EAFuB,yBAKtBA,EAASC,MALa,gCAO7BC,QAAQC,MAAM,KAAMC,SAPS,yDAAH,sDAWjBC,EAAmB,mCAAG,6GAERN,EAAAA,EAAAA,IAAA,UAAaL,EAAb,oBAAkCD,EAAlC,YAFQ,cAEzBO,EAFyB,yBAGxBA,EAASC,MAHe,gCAK/BC,QAAQC,MAAM,KAAMC,SALW,yDAAH,qDASnBE,EAAiB,mCAAG,WAAMjB,GAAN,gGAENU,EAAAA,EAAAA,IAAA,UAClBH,EADkB,YACHP,EADG,oBACWI,EADX,oBAFM,cAEvBO,EAFuB,yBAKtBA,EAASC,MALa,gCAO7BC,QAAQC,MAAM,KAAMC,SAPS,yDAAH,sDAWjBG,EAAc,mCAAG,WAAMlB,GAAN,gGAEHU,EAAAA,EAAAA,IAAA,UAClBP,EADkB,kBACAH,EADA,4BACsBI,EADtB,oBAFG,cAEpBO,EAFoB,yBAKnBA,EAASC,MALU,gCAO1BC,QAAQC,MAAM,KAAMC,SAPM,yDAAH,sDAWdpB,EAAiB,mCAAG,WAAMK,GAAN,gGAENU,EAAAA,EAAAA,IAAA,UAClBP,EADkB,kBACAH,EADA,4BACsBI,EADtB,oBAFM,cAEvBO,EAFuB,yBAKtBA,EAASC,MALa,gCAO7BC,QAAQC,MAAM,KAAMC,SAPS,yDAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/moviesApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Author = styled.li`\n  font-size: 20px;\n  font-weight: bold;\n`;\nexport const Text = styled.p`\n  font-size: 20px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/moviesApi';\nimport { Author, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReview] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(responseMovieReviews => {\n      setMovieReview(responseMovieReviews.results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {movieReviews > 0 ? (\n        movieReviews.map(({ id, author, content }) => {\n          return (\n            <ul key={id}>\n              <Author>{author}</Author>\n              <Text>{content}</Text>\n            </ul>\n          );\n        })\n      ) : (\n        <Text>Sorry, we dont have any reviews for this movie.</Text>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=274f591429d766d68767e6417342880c\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '274f591429d766d68767e6417342880c';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst DETAILS_URL = `${BASE_URL}/movie`;\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${TREND_URL}?api_key=${API_KEY}&page=1`);\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `${DETAILS_URL}/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n"],"names":["Author","styled","Text","useState","movieReviews","setMovieReview","movieId","useParams","useEffect","fetchMovieReviews","then","responseMovieReviews","results","map","id","author","content","BASE_URL","API_KEY","TREND_URL","SEARCH_URL","DETAILS_URL","fetchSearchMovies","query","axios","response","data","console","error","message","fetchTrendingMovies","fetchMovieDetails","fetchMovieCast"],"sourceRoot":""}