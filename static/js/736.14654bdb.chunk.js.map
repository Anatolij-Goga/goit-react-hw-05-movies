{"version":3,"file":"static/js/736.14654bdb.chunk.js","mappings":"+PAEaA,EAAgBC,EAAAA,GAAAA,IAAH,yIAQbC,EAAYD,EAAAA,GAAAA,IAAH,0Q,SCiCtB,EArCa,WACX,OAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAAAC,GAC3BN,EAAaM,EAAkBC,KAChC,GACF,GAAE,CAACN,KAGF,SAACN,EAAD,UACGI,EAAUS,OAAS,EAClBT,EAAUU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACZ,UAAChB,EAAD,WACGc,GACC,gBACEG,IAAG,yCAAoCH,GACvCI,IAAKH,EACLI,MAAO,OAGT,SAAC,MAAD,CAAqBC,KAAM,OAE7B,wBACE,uBAAIL,OAEN,wCAAgBC,OAbFH,EADJ,KAkBd,gEAIP,C,mMCrCKQ,EAAW,+BACXC,EAAU,mCACVC,EAAS,UAAMF,EAAN,wBACTG,EAAU,UAAMH,EAAN,iBACVI,EAAW,UAAMJ,EAAN,UAEJK,EAAiB,mCAAG,WAAMC,GAAN,gGAENC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,oBACIF,EADJ,iCACoCK,EADpC,gCAFM,cAEvBE,EAFuB,yBAKtBA,EAASC,MALa,gCAO7BC,QAAQC,MAAM,KAAMC,SAPS,yDAAH,sDAWjBC,EAAmB,mCAAG,6GAERN,EAAAA,EAAAA,IAAA,UAAaL,EAAb,oBAAkCD,EAAlC,YAFQ,cAEzBO,EAFyB,yBAGxBA,EAASC,MAHe,gCAK/BC,QAAQC,MAAM,KAAMC,SALW,yDAAH,qDASnBE,EAAiB,mCAAG,WAAMtB,GAAN,gGAENe,EAAAA,EAAAA,IAAA,UAClBH,EADkB,YACHZ,EADG,oBACWS,EADX,oBAFM,cAEvBO,EAFuB,yBAKtBA,EAASC,MALa,gCAO7BC,QAAQC,MAAM,KAAMC,SAPS,yDAAH,sDAWjB1B,EAAc,mCAAG,WAAMM,GAAN,gGAEHe,EAAAA,EAAAA,IAAA,UAClBP,EADkB,kBACAR,EADA,4BACsBS,EADtB,oBAFG,cAEpBO,EAFoB,yBAKnBA,EAASC,MALU,gCAO1BC,QAAQC,MAAM,KAAMC,SAPM,yDAAH,sDAWdG,EAAiB,mCAAG,WAAMvB,GAAN,gGAENe,EAAAA,EAAAA,IAAA,UAClBP,EADkB,kBACAR,EADA,4BACsBS,EADtB,oBAFM,cAEvBO,EAFuB,yBAKtBA,EAASC,MALa,gCAO7BC,QAAQC,MAAM,KAAMC,SAPS,yDAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/moviesApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.div`\n  justify-content: space-between;\n  gap: 30px;\n  flex-wrap: wrap;\n  display: flex;\n  padding: 0px 0px 30px;\n`;\n\nexport const Container = styled.div`\n  padding-top: 30px;\n  width: 150px;\n  text-align: center;\n  border-radius: 10px;\n  box-shadow: rgb(9 30 66 / 25%) 0px 4px 8px -2px,\n    rgb(9 30 66 / 8%) 0px 0px 0px 1px;\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/moviesApi';\nimport { MdImageNotSupported } from 'react-icons/md';\nimport { CastContainer, Container } from './Cast.styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(responceMovieCast => {\n      setMovieCast(responceMovieCast.cast);\n    });\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {movieCast.length > 0 ? (\n        movieCast.map(({ id, profile_path, name, character }) => (\n          <Container key={id}>\n            {profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n                width={100}\n              />\n            ) : (\n              <MdImageNotSupported size={125} />\n            )}\n            <p>\n              <b>{name}</b>\n            </p>\n            <p> Character: {character}</p>\n          </Container>\n        ))\n      ) : (\n        <p>Sorry, there isn't any information.</p>\n      )}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\n// https://api.themoviedb.org/3/movie/550?api_key=274f591429d766d68767e6417342880c\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '274f591429d766d68767e6417342880c';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst DETAILS_URL = `${BASE_URL}/movie`;\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const response = await axios.get(\n      `${SEARCH_URL}?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${TREND_URL}?api_key=${API_KEY}&page=1`);\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieDetails = async id => {\n  try {\n    const response = await axios.get(\n      `${DETAILS_URL}/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error.message);\n  }\n};\n"],"names":["CastContainer","styled","Container","useState","movieCast","setMovieCast","movieId","useParams","useEffect","fetchMovieCast","then","responceMovieCast","cast","length","map","id","profile_path","name","character","src","alt","width","size","BASE_URL","API_KEY","TREND_URL","SEARCH_URL","DETAILS_URL","fetchSearchMovies","query","axios","response","data","console","error","message","fetchTrendingMovies","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}